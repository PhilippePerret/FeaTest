." Modele de page man
." Manpage pour featest
.TH man 1 "22 11 2017" "1.0" "featest"

.SH NAME

featest - Test par fonctionnalité et user

."
." ============= SYNOPSIS =============
."

.SH SYNOPSIS

.B featest 
{path/to/file}
[options]

  Run tests in `path/to/file` folder, as they're defined with `options` (see below).

.B featest check
{path/to/file}
[--steps=STEPS]
[-b/--build]
[--error-only]

  Check les tests du site situé à {path/to/file}. Checker signifie que le programme
  vérifie la correspondance entre la définition des "featest sheets" (feuilles définissant
  les fonctionnalités) et les dossiers et fichiers.
  - Chaque fonctionnalité doit avoir sa définition et sa "contre-définition" (can_not)
  - Chaque fichier doit avoir sa ligne dans une featest sheet.
  
  L'option `step` permet de définir les étapes qui doivent être checkées. Cf. ci-dessous.

  L'option `build` permet de construire les fichiers manquants pendant le check. Cela
  reproduit la commande `featest build`.

  Si l'option `--error-only` est activée, le rapport de check ou de reconstruction n'affiche
  que les erreurs rencontrées. Utile lorsqu'on veut se concentrer sur les features-code
  à établir.

.B featest build
{path/to/file}
[options]

  Construit les pages de test qui manquent.

.B featest rename current_name new_name[ path/to/ftest_sheet ]

  Rename the `current_name` feature with `new_name` in :
  1. the `can_` file, the `CANT_` file (if exists) and the `ftest_sheet.ftest` file.

."
." ============= DESCRIPTION =============
."

.SH DESCRIPTION

  Folder hierarchy.

    ./spec/features/ featest/sheets/
                            /steps/


."
." ============= OPTIONS =============
."

.SH OPTIONS

Options in featest are more than options... They really define tests.

.B --as=USERTYPE

  User(s) tests must use to run against.

  This can be a list of user-types separated with commas (p.e. `--as=visitor,admin`)

  This can also be 'all' (default, `--as=all`) to use all user-types.

.B --step=STEP

.B --steps=FIRST_STEP-LAST_STEP

.B --steps=STEP1,STEP2...,STEPN

  Defines which steps must be ran. It can be a uniq step with `step`, a range
  of steps with `first-last` or a list.

  Note : no comma at all in step list.
  
  This option can be used with `featest check` or `featest build`.

.B -p/--path

  With this option on, the paths of the feature-code files are written above
  the test so you can edit them.

.B -r/--random

  Run tests randomly.

.B --offline

  To test OFFLINE (development). It's the default.

.B --online

  To test ONLINE (test/production)

.B -dg/--debug

  Display debug messages and error backtraces.

.B --[non-]exhaustif

  Traite les tests de façon exaustive, c'est-à-dire que les listes ne sont pas
  raccourcies. Ou pas, si `non-` est utilisé.

.B --fast

  Do not pause durint the test. In normal mode, test pauses to let programer takes
  a look at the pages, the forms, the messages, and so on. In fast mode, no pause
  at all.

.B --wait=COEFFICIENT

  You can slow down or accelerate the pauses during the tests with this option. 1 is
  the default value. A value between 0 and 1 accelerates the test, a value greater than
  1 slows down the test, letting the programer taking a look at the interface.

.B --[no-]fail-fast

  As of RSpec, with this option on, tests stop at first error.

.B -b/--build

  With `check` command, this option force the missing building of feature code files

.B --error-only

  With the `check` command and this option activated, only the errors are displaye so
  we can focus on the missing feature-file or the missing feature-code.

B --grade=GRADE

  Define the minimum grade for the user.

."
." ============= EXAMPLES =============
."

.SH EXAMPLES



."
." ============= VOIR AUSSI =============
."

.SH SEE ALSO



."
." ============= BUGS =============
."

.SH BUGS





."
." ============= AUTEUR =============
."

.SH AUTHOR

Philippe Perret <philippe.perret@yahoo.fr>


